{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst $ = window.jQuery;\nexport default {\n  data() {\n    return {\n      sessionStarted: false,\n      messages: [],\n      message: ''\n    };\n  },\n  created() {\n    this.username = sessionStorage.getItem('username');\n    $.ajaxSetup({\n      //beforeSend: function (xhr) {\n      //xhr.setRequestHeader('Authorization', `JWT ${sessionStorage.getItem('authToken')}`)\n      headers: {\n        'Authorization': `Token ${sessionStorage.getItem('authToken')}`\n      }\n    });\n    if (this.$route.params.uri) {\n      this.joinChatSession();\n    }\n    setInterval(this.fetchChatSessionHistory, 3000);\n  },\n  methods: {\n    startChatSession() {\n      $.post('http://localhost:8000/api/chats/', data => {\n        alert(\"A new session has been created you'll be redirected automatically\");\n        this.sessionStarted = true;\n        this.$router.push(`/chats/${data.uri}/`);\n      }).fail(response => {\n        alert(response.responseText);\n      });\n    },\n    postMessage(event) {\n      const data = {\n        message: this.message\n      };\n      $.post(`http://localhost:8000/api/chats/${this.$route.params.uri}/messages/`, data, data => {\n        this.message = '';\n      }).fail(response => {\n        alert(response.responseText);\n      });\n    },\n    joinChatSession() {\n      const uri = this.$route.params.uri;\n      $.ajax({\n        url: `http://localhost:8000/api/chats/${uri}/`,\n        data: {\n          username: this.username\n        },\n        type: 'PATCH',\n        success: data => {\n          const user = data.members.find(member => member.username === this.username);\n          if (user) {\n            this.sessionStarted = true;\n            this.fetchChatSessionHistory();\n          }\n        }\n      });\n    },\n    fetchChatSessionHistory() {\n      $.get(`http://127.0.0.1:8000/api/chats/${this.$route.params.uri}/messages/`, data => {\n        this.messages = data.messages;\n      });\n    }\n  }\n};","map":{"version":3,"names":["$","window","jQuery","data","sessionStarted","messages","message","created","username","sessionStorage","getItem","ajaxSetup","headers","$route","params","uri","joinChatSession","setInterval","fetchChatSessionHistory","methods","startChatSession","post","alert","$router","push","fail","response","responseText","postMessage","event","ajax","url","type","success","user","members","find","member","get"],"sources":["/Users/siowyy/Documents/Projects/chatsync/chatsync-frontend/src/views/ChatView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"text-center\">This is ChatSync!</h1>\n        <div class=\"row\">\n            <div class=\"col-sm-6 offset-3\">\n                <div v-if=\"sessionStarted\" id=\"chat-container\" class=\"card\">\n                    <div class=\"card-header text-white text-center font-weight-bold subtle-blue-gradient\">\n                        Share the page URL to invite new friends\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"container chat-body\">\n                            <div v-for=\"message in messages\" :key=\"message.id\" class=\"row chat-section\">\n                                <template v-if=\"username === message.user.username\">\n                                    <div class=\"col-sm-7 offset-3\">\n                                        <span class=\"card-text speech-bubble speech-bubble-user float-end text-white subtle-blue-gradient\">{{ message.message }}</span>\n                                    </div>\n                                    <div class=\"col-sm-2\">\n                                        <img class=\"rounded-circle\" src=\"https://mrwallpaper.com/images/hd/cute-girl-vector-art-profile-picture-jhbu3wt713zj2bti.jpg\">\n                                    </div>\n                                </template>\n                                <template v-else>\n                                    <div class=\"col-sm-2\">\n                                        <img class=\"rounded-circle\" src=\"https://img.freepik.com/free-vector/isolated-young-handsome-man-different-poses-white-background-illustration_632498-859.jpg?size=338&ext=jpg&ga=GA1.1.1224184972.1711929600&semt=ais\">\n                                    </div>\n                                    <div class=\"col-sm-7\">\n                                        <span class=\"card-text speech-bubble speech-bubble-peer float-start\">{{ message.message }}</span>\n                                    </div>\n                                </template>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer text-muted\">\n                        <form @submit.prevent=\"postMessage\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-10\">\n                                    <input v-model=\"message\" type=\"text\" placeholder=\"Type a message\">\n                                </div>\n                                <div class=\"col-sm-2\">\n                                    <button class=\"btn btn-primary\">Send</button>\n                                </div>\n                             </div>\n                        </form>\n                    </div>\n                </div>\n                <div v-else>\n                    <h3 class=\"text-center\">Welcome!</h3>\n                    <br>\n                    <p class=\"text-center\">To start chatting with friends click on the button below, it will start a new chat session and then you can invite your friends over to chat!</p>\n                    <br>\n                    <button @click=\"startChatSession\" class=\"btn btn-primary btn-lg btn-block\">Start Chatting</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nconst $ = window.jQuery\nexport default {\n  data () {\n    return {\n      sessionStarted: false,\n      messages: [],\n      message: ''\n    }\n  },\n  created () {\n    this.username = sessionStorage.getItem('username')\n    $.ajaxSetup({\n      //beforeSend: function (xhr) {\n        //xhr.setRequestHeader('Authorization', `JWT ${sessionStorage.getItem('authToken')}`)\n      headers: {\n        'Authorization': `Token ${sessionStorage.getItem('authToken')}`\n        }\n      })\n      if (this.$route.params.uri) {\n        this.joinChatSession()\n      }\n    setInterval(this.fetchChatSessionHistory, 3000)\n  },\n  methods: {\n    startChatSession () {\n      $.post('http://localhost:8000/api/chats/', (data) => {\n        alert(\"A new session has been created you'll be redirected automatically\")\n        this.sessionStarted = true\n        this.$router.push(`/chats/${data.uri}/`)\n      })\n        .fail((response) => {\n          alert(response.responseText)\n        })\n    },\n    postMessage (event) {\n      const data = { message: this.message }\n      $.post(`http://localhost:8000/api/chats/${this.$route.params.uri}/messages/`, data, (data) => {\n        this.message = ''\n      })\n        .fail((response) => {\n          alert(response.responseText)\n        })\n    },\n    joinChatSession () {\n      const uri = this.$route.params.uri\n      $.ajax({\n        url: `http://localhost:8000/api/chats/${uri}/`,\n        data: { username: this.username },\n        type: 'PATCH',\n        success: (data) => {\n          const user = data.members.find((member) => member.username === this.username)\n          if (user) {\n            this.sessionStarted = true\n            this.fetchChatSessionHistory()\n          }\n        }\n      })\n    },\n    fetchChatSessionHistory () {\n      $.get(`http://127.0.0.1:8000/api/chats/${this.$route.params.uri}/messages/`, (data) => {\n        this.messages = data.messages\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n    h1, h2 {\n        font-weight: normal;\n    }\n    img {\n        height: 40px;\n        width: 40px;\n    }\n    ul {\n        list-style-type: none;\n        padding: 0;\n    }\n    li {\n        display: inline-block;\n        margin: 0 10px;\n    }\n    .button {\n        border-radius: 0;\n    }\n    .card-footer input[type=\"text\"] {\n        background-color: #ffffff;\n        color: #444444;\n        padding: 7px;\n        font-size: 13px;\n        border: 2px solid #cccccc;\n        width: 100%;\n        height: 38px;\n    }\n    .card-header a {\n        text-decoration: underline;\n    }\n    .card-body {\n        background-color: #dddddd;\n    }\n    .chat-body {\n        margin-top: -15px;\n        margin-bottom: -5px;\n        height: 380px;\n        overflow-y: auto;\n    }\n    .speech-bubble {\n        display: inline-block;\n        position: relative;\n        border-radius: 0.4em;\n        padding: 10px;\n        background-color: #fff;\n        font-size: 14px;\n    }\n    .subtle-blue-gradient {\n        background: linear-gradient(45deg,#004bff, #007bff);\n    }\n    .speech-bubble-user:after {\n        content: \"\";\n        position: absolute;\n        right: 4px;\n        top: 10px;\n        width: 0;\n        height: 0;\n        border: 20px solid transparent;\n        border-left-color: #007bff;\n        border-right: 0;\n        border-top: 0;\n        margin-top: -10px;\n        margin-right: -20px;\n    }\n    .speech-bubble-peer:after {\n        content: \"\";\n        position: absolute;\n        left: 3px;\n        top: 10px;\n        width: 0;\n        height: 0;\n        border: 20px solid transparent;\n        border-right-color: #ffffff;\n        border-top: 0;\n        border-left: 0;\n        margin-top: -10px;\n        margin-left: -20px;\n    }\n    .chat-section:first-child {\n        margin-top: 10px;\n    }\n    .chat-section {\n        margin-top: 15px;\n    }\n    .send-section {\n        margin-bottom: -20px;\n        padding-bottom: 10px;\n    }\n</style>\n"],"mappings":";AAyDA,MAAMA,CAAA,GAAIC,MAAM,CAACC,MAAK;AACtB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,cAAc,EAAE,KAAK;MACrBC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,QAAO,GAAIC,cAAc,CAACC,OAAO,CAAC,UAAU;IACjDV,CAAC,CAACW,SAAS,CAAC;MACV;MACE;MACFC,OAAO,EAAE;QACP,eAAe,EAAG,SAAQH,cAAc,CAACC,OAAO,CAAC,WAAW,CAAE;MAC9D;IACF,CAAC;IACD,IAAI,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE;MAC1B,IAAI,CAACC,eAAe,CAAC;IACvB;IACFC,WAAW,CAAC,IAAI,CAACC,uBAAuB,EAAE,IAAI;EAChD,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAeA,CAAA,EAAK;MAClBpB,CAAC,CAACqB,IAAI,CAAC,kCAAkC,EAAGlB,IAAI,IAAK;QACnDmB,KAAK,CAAC,mEAAmE;QACzE,IAAI,CAAClB,cAAa,GAAI,IAAG;QACzB,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAE,UAASrB,IAAI,CAACY,GAAI,GAAE;MACzC,CAAC,EACEU,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,KAAK,CAACI,QAAQ,CAACC,YAAY;MAC7B,CAAC;IACL,CAAC;IACDC,WAAUA,CAAGC,KAAK,EAAE;MAClB,MAAM1B,IAAG,GAAI;QAAEG,OAAO,EAAE,IAAI,CAACA;MAAQ;MACrCN,CAAC,CAACqB,IAAI,CAAE,mCAAkC,IAAI,CAACR,MAAM,CAACC,MAAM,CAACC,GAAI,YAAW,EAAEZ,IAAI,EAAGA,IAAI,IAAK;QAC5F,IAAI,CAACG,OAAM,GAAI,EAAC;MAClB,CAAC,EACEmB,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,KAAK,CAACI,QAAQ,CAACC,YAAY;MAC7B,CAAC;IACL,CAAC;IACDX,eAAcA,CAAA,EAAK;MACjB,MAAMD,GAAE,GAAI,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,GAAE;MACjCf,CAAC,CAAC8B,IAAI,CAAC;QACLC,GAAG,EAAG,mCAAkChB,GAAI,GAAE;QAC9CZ,IAAI,EAAE;UAAEK,QAAQ,EAAE,IAAI,CAACA;QAAS,CAAC;QACjCwB,IAAI,EAAE,OAAO;QACbC,OAAO,EAAG9B,IAAI,IAAK;UACjB,MAAM+B,IAAG,GAAI/B,IAAI,CAACgC,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAAC7B,QAAO,KAAM,IAAI,CAACA,QAAQ;UAC5E,IAAI0B,IAAI,EAAE;YACR,IAAI,CAAC9B,cAAa,GAAI,IAAG;YACzB,IAAI,CAACc,uBAAuB,CAAC;UAC/B;QACF;MACF,CAAC;IACH,CAAC;IACDA,uBAAsBA,CAAA,EAAK;MACzBlB,CAAC,CAACsC,GAAG,CAAE,mCAAkC,IAAI,CAACzB,MAAM,CAACC,MAAM,CAACC,GAAI,YAAW,EAAGZ,IAAI,IAAK;QACrF,IAAI,CAACE,QAAO,GAAIF,IAAI,CAACE,QAAO;MAC9B,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}